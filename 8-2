import java.util.Scanner;

// Abstract class for shape
abstract class Shape {
    abstract void computeArea();
}

// Rectangle class extending Shape
class Rectangle extends Shape {
    private double length;
    private double breadth;

    // Constructor to initialize rectangle dimensions
    public Rectangle(double length, double breadth) {
        this.length = length;
        this.breadth = breadth;
    }

    // Implementation of computeArea() for rectangle
    @Override
    void computeArea() {
        double area = length * breadth;
        System.out.println("Area of the rectangle: " + area);
    }
}

// Circle class extending Shape
class Circle extends Shape {
    private double radius;

    // Constructor to initialize circle radius
    public Circle(double radius) {
        this.radius = radius;
    }

    // Implementation of computeArea() for circle
    @Override
    void computeArea() {
        double area = Math.PI * radius * radius;
        System.out.println("Area of the circle: " + area);
    }
}

// Main class
public class AreaUsingAbstractClass {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        // Input for rectangle
        System.out.print("Enter the length of the rectangle: ");
        double length = sc.nextDouble();
        System.out.print("Enter the breadth of the rectangle: ");
        double breadth = sc.nextDouble();
        Rectangle rectangle = new Rectangle(length, breadth);
        rectangle.computeArea();

        // Input for circle
        System.out.print("Enter the radius of the circle: ");
        double radius = sc.nextDouble();
        Circle circle = new Circle(radius);
        circle.computeArea();
    }
}
